Same Binary Tree
-----------------------
Time Complexity - O(N)
Space Complexity - O(N)
-----------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
// If both nodes are null then return true
        if(p == null && q == null){
            return true;
        }
        if(p == null || q == null){
            return false;
        }
// If node values don't match return false
        if(p.val != q.val){
            return false;
        }
        // Recursively traverse left and right nodes
        return isSameTree(p.left,q.left) && isSameTree(p.right,q.right);
    }
}
