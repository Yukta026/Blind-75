Graph Valid tree
------------------------
Time Complexity - O(N+E)
Space Complexity - O(N)
------------------------
class Solution {
    public boolean validTree(int n, int[][] edges) {
        int[] parent = new int[n];
        if(edges.length != n-1){ return false;} // Tree must have exactly n-1 nodes

        for(int i=0;i<n;i++){
            parent[i] = i;
        }

        

        for(int[] edge : edges){
            int rootA = find(edge[0],parent);
            int rootB = find(edge[1],parent);
            // Cycle exists
            if(rootA == rootB) {
                return false;
            }
// Union
            parent[rootA] = rootB;
        }
        return true;
    }
    public int find(int x,int[] parent){
            if(parent[x] != x){
                parent[x] = find(parent[x],parent);
            }
            return parent[x];
        }
}
