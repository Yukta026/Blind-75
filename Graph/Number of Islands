Number of Islands
-------------------------
Time Complexity - O(m*n)
Space Complexity - O(m*n)
-------------------------
class Solution {
    public int numIslands(char[][] grid) {
        int noOfIslands = 0;
        int m = grid.length;
        int n = grid[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
// Island found so increment counter
                if(grid[i][j] == '1'){
                    noOfIslands++;
                    dfs(i,j,grid);
                }
                
            }
        }
        return noOfIslands;
    }
    public void dfs(int i,int j,char[][] grid){
// Boundary cases check
        if(i <0 || j <0 || i >= grid.length || j >= grid[0].length || grid[i][j] == '0'){
            return;
        }

            grid[i][j] = '0';
// DFS for neighbouring islands
            dfs(i+1,j,grid);
            dfs(i-1,j,grid);
            dfs(i,j+1,grid);
            dfs(i,j-1,grid);

    }
}
