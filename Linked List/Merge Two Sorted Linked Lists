Merge Two Sorted Linked Lists
-----------------------------
Time Complexity - O(m+n)
Space Complexity - O(m+n)
-----------------------------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
// Creating a dummy node to point answer node from it's next
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        while(list1 != null && list2 != null){
// Merging lists in sorted order
            if(list1.val <= list2.val){
                current.next = list1;
                list1 = list1.next;    
            }
            else{
                current.next = list2;
                list2 = list2.next;
            }
            current = current.next;
        }
 // Either list1 or list2 wouldn't be empty      
        if(list1 != null){
            current.next = list1;
        }
        else{
            current.next = list2;
        }
        return dummy.next;
    }
}
