Remove Node From End of Linked List
-----------------------------------
Time Complexity - O(n)
Space Complexity - O(1)
-----------------------------------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode fast = dummy;
        ListNode slow = dummy;
// Iterating fast pointer till the node to be removed
        for(int i=0;i<=n;i++){
            fast = fast.next;
        }
// Iterating both pointer until fast pointer is null
        while(fast != null){
            slow = slow.next;
            fast = fast.next;
        }
// Skipping the node to be removed
        slow.next = slow.next.next;
        return dummy.next;
    }
}
