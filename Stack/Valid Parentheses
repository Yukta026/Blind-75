Valid Parentheses
-----------------------
Time Complexity - O(n)
Space Complexity - O(n)
-----------------------

class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<>();
        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
// Pushing closing parentheses to stack
            if(c == '(') st.push(')');
            else if(c == '{') st.push('}');
            else if(c == '[') st.push(']');
// If stack is empty or top element not equal to current character, invalid parentheses
            else{
                if(st.isEmpty() || st.pop() != c){
                    return false;
                }
            }

        }
    return st.isEmpty();    
    }
    
    }

