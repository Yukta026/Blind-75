Set Matrix Zeroes
-------------------------
Time Complexity - O(n*m)
Space Complexity - O(1)
-------------------------
class Solution {
    public void setZeroes(int[][] matrix) {
        boolean zero_top_row = false;
        boolean zero_first_col = false;

        // Check if Topmost row contains zero
        for(int j=0;j<matrix[0].length;j++){
            if(matrix[0][j] == 0){
                zero_top_row = true;
                break;
            }
        }

        // Check if Leftmost column contains zero
        for(int i=0;i<matrix.length;i++){
            if(matrix[i][0] == 0){
                zero_first_col = true;
                break;
            }
        }

        // Finding for zeros present in the matrix, except first row and column
        for(int i=1;i<matrix.length;i++){
            for(int j=1;j<matrix[0].length;j++){
                if(matrix[i][j] == 0){
                    matrix[0][j] = 0;
                    matrix[i][0] = 0;
                }
            }
        }

        // Marking entire row and column respectively
        for(int i=1;i<matrix.length;i++){
            for(int j=1;j<matrix[0].length;j++){
                if(matrix[i][0] == 0 || matrix[0][j] == 0){
                    matrix[i][j] = 0;
                }
            }
        }

         // Marking left column as zero if zero exists in left column
         if(zero_first_col){
            for(int i=0;i<matrix.length;i++){
                matrix[i][0] = 0;
            }
        }
       
       // Marking top row as zero if zero exists in top row
        if(zero_top_row){
            for(int j=0;j<matrix[0].length;j++){
                matrix[0][j] = 0;
            }
        }

    }
}
