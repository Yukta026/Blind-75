Spiral Matrix
-------------------------
Time Complexity - O(n*m)
Space Complexity - O(1)
-------------------------
class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        List<Integer> ans = new ArrayList<>();
        int top = 0;
        int right = m-1;
        int bottom = n-1;
        int left = 0;

        while(top <= bottom && left <= right){

        // Top row
        for(int j=left;j<=right;j++){
                ans.add(matrix[top][j]);
            }
        top++;

        // Right Column
        for(int i=top;i<=bottom;i++){
                ans.add(matrix[i][right]);
            }
        right--;
        

        // Bottom row
        if(top <= bottom){
        for(int j=right;j>=left;j--){
                ans.add(matrix[bottom][j]);
            }
        bottom--;
        }
        // Left Column
        if(left <= right){
        for(int i=bottom;i>=top;i--){
                ans.add(matrix[i][left]);
            }
        left++;
        }
        }
        return ans;
    }
}
